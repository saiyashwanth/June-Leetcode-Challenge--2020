


    class Solution {
    
    public boolean isSafe(char [][]board,int length,int x,int y){

    return x>=0&&x<length&&y>=0&&y<board[0].length&&board[x][y]=='O';
    }
    public void solve(char[][] board) {
        if(board.length==0)return;
        int m=board.length,n=board[0].length;
        
        for(int i=0;i<m;i++){
         
            if(board[i][0]=='O')
                island(board,i,0);
            if(board[i][n-1]=='O')
               island(board,i,n-1);
        }
        
        for(int i=0;i<n;i++){
         
            if(board[0][i]=='O')
                island(board,0,i);
            if(board[m-1][i]=='O')
               island(board,m-1,i);
        }
        for(int i=0;i<m;i++){
        
            for(int j=0;j<n;j++){

            if(board[i][j]=='O')
                board[i][j]='X';
                else if(board[i][j]==';')
                    board[i][j]='O';
                    
            }
        
        }
        
       
}
    
    public void island(char [][]board,int i ,int j){

    if(isSafe(board,board.length,i,j)){
        board[i][j]=';';
        island(board,i-1,j);
        island(board,i+1,j);
        island(board,i,j-1);
        island(board,i,j+1);
    }
     /*   if(i<0 || i>=board.length || j<0 || j>=board[0].length) 
        return;
 
    if(board[i][j] != 'O')
        return;
 
    board[i][j] = ';';
 
    island(board, i-1, j);
    island(board, i+1, j);
    island(board, i, j-1);
    island(board, i, j+1);
}*/
    }
}

